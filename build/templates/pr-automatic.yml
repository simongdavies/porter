# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go


parameters:
  pool: ''
  goversion: '1.13.10'

jobs:
  pool: '${{ parameters.pool }}'
- job: setup
  steps:
  - script: ./build/doc-only-build.sh
    name: BUILD
    displayName: 'Check Doc Only Build'

- job: test
  dependsOn: setup
  condition: eq(dependencies.setup.outputs['BUILD.DOCS_ONLY'], 'false')
  steps:
  - task: GoTool@0
    inputs:
      version: '${{ parameters.goversion }}'
  - script: build/azure-pipelines.setup-go-workspace.sh
    displayName: 'Set up the Go workspace'

  - script: |
      make verify
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Verify'

  - script: |
      make test-unit
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Unit Test'

- job: compile
  dependsOn: setup
  condition: eq(dependencies.setup.outputs['BUILD.DOCS_ONLY'], 'false')
  steps:
  - task: GoTool@0
    inputs:
      version: '${{ parameters.goversion }}'
  - script: build/azure-pipelines.setup-go-workspace.sh
    displayName: 'Set up the Go workspace'

  - script: |
        make xbuild-all
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Cross Compile'

- job: validate_example_bundles
  dependsOn: setup
  condition: eq(dependencies.setup.outputs['BUILD.DOCS_ONLY'], 'false')
  steps:
  - task: GoTool@0
    inputs:
      version: '${{ parameters.goversion }}'
  - script: build/azure-pipelines.setup-go-workspace.sh
    displayName: 'Set up the Go workspace'

  - script: |
      make build
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Build'

  - script: |
      sudo make ajv
      make build-bundle validate-bundle
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Validate Example Bundles'

- job: integration_test
  dependsOn: setup
  condition: eq(dependencies.setup.outputs['BUILD.DOCS_ONLY'], 'false')
  steps:
  - task: GoTool@0
    inputs:
      version: '${{ parameters.goversion }}'
  - script: build/azure-pipelines.setup-go-workspace.sh
    displayName: 'Set up the Go workspace'

  - script: |
      make build
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Build'

  - script: ./build/run-integration-tests.sh
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Integration Test'

- job: cli_test
  dependsOn: setup
  condition: eq(dependencies.setup.outputs['BUILD.DOCS_ONLY'], 'false')
  steps:
  - task: GoTool@0
    inputs:
      version: '${{ parameters.goversion }}'
  - script: build/azure-pipelines.setup-go-workspace.sh
    displayName: 'Set up the Go workspace'

  - script: |
       make build
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Build'

  - script: |
      make start-local-docker-registry test-cli stop-local-docker-registry
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'CLI Test'